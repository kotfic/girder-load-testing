---
- hosts: all
  vars:
    girder_update: no
    girder_force: no
    girder_start: no
    girder_always_build_assets: yes
    nginx_vhosts:
      - listen: "8080 default_server"
        server_name: "girder"
        extra_parameters: |
          location / {
            proxy_set_header Host $proxy_host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_pass http://localhost:8888/;
            # Must set the following for SSE notifications to work
            proxy_buffering off;
            proxy_cache off;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            chunked_transfer_encoding off;
            proxy_read_timeout 600s;
            proxy_send_timeout 600s;
          }

  pre_tasks:
    - name: Update package cache
      apt:
        update_cache: yes
      become: yes
      become_user: root
      when: ansible_os_family == "Debian"
    - name: Install Pip
      apt:
        name: python3-pip
      become: yes
      become_user: root
      when: ansible_os_family == "Debian"


  roles:
    - role: Stouts.mongodb
      become: yes
      become_user: root
      when: ansible_os_family == "Debian"

    - role: girder.girder

    - role: geerlingguy.nginx
      become: yes
      become_user: root

  post_tasks:
    - name: Tweak Girder server configurations
      ini_file:
        dest="{{ girder_path }}/girder/conf/girder.local.cfg"
        backup=yes
        section="{{ item.section }}"
        option="{{ item.option }}"
        value="{{ item.value }}"
      with_items:
        - { section: "global", option: "server.thread_pool", value: "1000" }
        - { section: "global", option: "server.socket_port", value: "8888" }
        - { section: "global", option: "tools.proxy.on", value: "True" }
        - { section: "server", option: "mode", value: '"development"' }

    # nginx and apache both use the httpd label in SELinux
    - name: Allow nginx to connect to the local network via SELinux
      command: "setsebool httpd_can_network_connect 1"
      become: yes
      become_user: root
      when: ansible_os_family == "RedHat"

    - name: restart girder/nginx
      service:
        state=restarted
        name={{ item }}
      with_items:
        - girder
        - nginx
      become: yes
      become_user: root

    - name: Wait for Girder to be available
      wait_for:
        port: 8080

    - name: Install Girder-Client
      pip:
        name: "girder-client"
        state: present
      become: yes
      become_user: root

    - name: Create Girder User
      girder:
        port: 8080
        user:
          firstName: "girder"
          lastName: "girder"
          login: "girder"
          password: "girder"
          email: "girder@girder.girder"
          admin: yes
        state: present

    - name: Setup Filesystem assetstore
      girder:
        port: 8080
        username: "girder"
        password: "girder"
        assetstore:
          name: "Primary assetstore"
          type: "filesystem"
          root: "/tmp/"
          current: yes
        state: present
